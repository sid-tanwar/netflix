{"ast":null,"code":"import _asyncToGenerator from\"/Users/siddharth/VsCode/netflix/netflix/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/siddharth/VsCode/netflix/netflix/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/siddharth/VsCode/netflix/netflix/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from'react';import axios from'./axios';import'./Row.css';import YouTube from\"react-youtube\";import movieTrailer from\"movie-trailer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var base_url=\"https://image.tmdb.org/t/p/original/\";function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,isLargeRow=_ref.isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailerUrl=_useState4[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);var handleClick=function handleClick(movie){if(trailerUrl){setTrailerUrl('');}else{movieTrailer((movie===null||movie===void 0?void 0:movie.name)||\"\").then(function(url){var urlParams=new URLSearchParams(new URL(url).search);setTrailerUrl(urlParams.get('v'));console.log(trailerUrl);}).catch(function(error){return console.log(error);});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row_posters\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleClick(movie);},className:\"row_poster \".concat(isLargeRow&&\"row_posterLarge\"),src:\"\".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name},movie.id);})})]});}export default Row;","map":{"version":3,"sources":["/Users/siddharth/VsCode/netflix/netflix/src/Row.js"],"names":["React","useState","useEffect","axios","YouTube","movieTrailer","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","get","request","data","results","handleClick","movie","name","then","url","urlParams","URLSearchParams","URL","search","console","log","catch","error","map","poster_path","backdrop_path","id"],"mappings":"0XAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,sCAAjB,CAEA,QAASC,CAAAA,GAAT,MAA8C,IAA/BC,CAAAA,KAA+B,MAA/BA,KAA+B,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAdC,UAAc,MAAdA,UAAc,CAC1C,cAA4BT,QAAQ,CAAC,EAAD,CAApC,wCAAOU,MAAP,eAAeC,SAAf,eACA,eAAoCX,QAAQ,CAAC,EAAD,CAA5C,yCAAOY,UAAP,eAAmBC,aAAnB,eAEAZ,SAAS,CAAC,UAAM,SAEGa,CAAAA,SAFH,qIAEZ,qKAC0BZ,CAAAA,KAAK,CAACa,GAAN,CAAUP,QAAV,CAD1B,QACUQ,OADV,eAEIL,SAAS,CAACK,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CAFJ,gCAGWF,OAHX,wDAFY,4CAQZF,SAAS,GACZ,CATQ,CASN,CAACN,QAAD,CATM,CAAT,CAaA,GAAMW,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC3B,GAAIR,UAAJ,CAAgB,CACZC,aAAa,CAAC,EAAD,CAAb,CACH,CAFD,IAGK,CAEDT,YAAY,CAAC,CAAAgB,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEC,IAAP,GAAe,EAAhB,CAAZ,CACKC,IADL,CACU,SAAAC,GAAG,CAAI,CACT,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,CAAoB,GAAIC,CAAAA,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAlB,CACAd,aAAa,CAACW,SAAS,CAACT,GAAV,CAAc,GAAd,CAAD,CAAb,CACAa,OAAO,CAACC,GAAR,CAAYjB,UAAZ,EACH,CALL,EAKOkB,KALP,CAKa,SAAAC,KAAK,QAAIH,CAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAAJ,EALlB,EAOH,CACJ,CAdD,CAiBA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,oBAAKxB,KAAL,EADJ,cAEI,YAAK,SAAS,CAAC,aAAf,UACKG,MAAM,CAACsB,GAAP,CAAW,SAAAZ,KAAK,qBACb,YAEI,OAAO,CAAE,yBAAMD,CAAAA,WAAW,CAACC,KAAD,CAAjB,EAFb,CAGI,SAAS,sBAAgBX,UAAU,EAAI,iBAA9B,CAHb,CAII,GAAG,WAAKJ,QAAL,SAAgBI,UAAU,CAAGW,KAAK,CAACa,WAAT,CAAuBb,KAAK,CAACc,aAAvD,CAJP,CAI+E,GAAG,CAAEd,KAAK,CAACC,IAJ1F,EACSD,KAAK,CAACe,EADf,CADa,EAAhB,CADL,EAFJ,GADJ,CAeH,CAED,cAAe7B,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from './axios'\nimport './Row.css'\nimport YouTube from \"react-youtube\"\nimport movieTrailer from \"movie-trailer\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n    useEffect(() => {\n\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n\n\n    const handleClick = (movie) => {\n        if (trailerUrl) {\n            setTrailerUrl('');\n        }\n        else {\n\n            movieTrailer(movie?.name || \"\")\n                .then(url => {\n                    const urlParams = new URLSearchParams(new URL(url).search);\n                    setTrailerUrl(urlParams.get('v'));\n                    console.log(trailerUrl);\n                }).catch(error => console.log(error));\n\n        }\n    }\n\n\n    return (\n        <div className=\"row\" >\n            <h2>{title}</h2>\n            <div className=\"row_posters\">\n                {movies.map(movie => (\n                    <img\n                        key={movie.id}\n                        onClick={() => handleClick(movie)}\n                        className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n                        src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\n                ))}\n            </div>\n\n        </div >\n    )\n}\n\nexport default Row"]},"metadata":{},"sourceType":"module"}